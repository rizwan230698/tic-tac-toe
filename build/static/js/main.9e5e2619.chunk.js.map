{"version":3,"sources":["components/GamePage.js","components/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["Gamepage","props","state","active","boxes","box1","box2","box3","box4","box5","box6","box7","box8","box9","winner","gameover","handleClick","bind","checkWinner","resetGame","array","i","length","document","getElementById","innerText","this","setState","e","target","text","clickedBox","id","player1","player2","name","gameoverDisplay","className","onClick","window","location","reload","winnerDisplay","React","Component","LandingPage","handleChange","handleSubmit","p1","useRef","p2","button","onKeyDown","keyCode","value","current","focus","useEffect","type","onChange","placeholder","autoComplete","ref","TicTacToe","display","toUpperCase","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","checkValidServiceWorker","ReactDOM","render"],"mappings":"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","file":"static/js/main.9e5e2619.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./GamePage.css\";\nclass Gamepage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: \"player1\",\n      boxes: {\n        box1: \"\",\n        box2: \"\",\n        box3: \"\",\n        box4: \"\",\n        box5: \"\",\n        box6: \"\",\n        box7: \"\",\n        box8: \"\",\n        box9: \"\"\n      },\n      winner: false,\n      gameover: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.checkWinner = this.checkWinner.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n  }\n\n  resetGame() {\n    const array = [\n      \"box1\",\n      \"box2\",\n      \"box3\",\n      \"box4\",\n      \"box5\",\n      \"box6\",\n      \"box7\",\n      \"box8\",\n      \"box9\"\n    ];\n    for (let i = 0; i < array.length; i++) {\n      document.getElementById(`${array[i]}`).innerText = \"\";\n    }\n    this.setState({\n      boxes: {\n        box1: \"\",\n        box2: \"\",\n        box3: \"\",\n        box4: \"\",\n        box5: \"\",\n        box6: \"\",\n        box7: \"\",\n        box8: \"\",\n        box9: \"\"\n      },\n      winner: false,\n      gameover: false\n    });\n  }\n\n  checkWinner() {\n    const {\n      box1,\n      box2,\n      box3,\n      box4,\n      box5,\n      box6,\n      box7,\n      box8,\n      box9\n    } = this.state.boxes;\n    if (\n      (box1 !== \"\" && box1 === box2 && box2 === box3) ||\n      (box4 !== \"\" && box4 === box5 && box5 === box6) ||\n      (box7 !== \"\" && box7 === box8 && box8 === box9) ||\n      (box1 !== \"\" && box1 === box4 && box4 === box7) ||\n      (box2 !== \"\" && box2 === box5 && box5 === box8) ||\n      (box3 !== \"\" && box3 === box6 && box6 === box9) ||\n      (box1 !== \"\" && box1 === box5 && box5 === box9) ||\n      (box3 !== \"\" && box3 === box5 && box5 === box7)\n    ) {\n      this.setState({ winner: true });\n    } else if (\n      box1 !== \"\" &&\n      box2 !== \"\" &&\n      box3 !== \"\" &&\n      box4 !== \"\" &&\n      box5 !== \"\" &&\n      box6 !== \"\" &&\n      box7 !== \"\" &&\n      box8 !== \"\" &&\n      box9 !== \"\"\n    ) {\n      this.setState({ gameover: true });\n    } else {\n      this.setState(state => ({\n        active: state.active === \"player1\" ? \"player2\" : \"player1\"\n      }));\n    }\n  }\n\n  handleClick(e) {\n    if (e.target.innerText === \"\") {\n      const { active } = this.state;\n      const text = active === \"player1\" ? \"X\" : \"O\";\n      e.target.innerText = text;\n      const clickedBox = e.target.id;\n      this.setState(\n        state => ({\n          boxes: { ...state.boxes, [clickedBox]: text }\n        }),\n        this.checkWinner\n      );\n    }\n  }\n\n  render() {\n    const { player1, player2 } = this.props;\n    const { active, winner, gameover } = this.state;\n    const name = active === \"player1\" ? player1 : player2;\n    const gameoverDisplay = gameover ? (\n      <div className=\"game-over\">\n        <span>Game Over</span>\n        <button onClick={this.resetGame}>Try Again</button>\n        <button onClick={() => window.location.reload()}>Restart Game</button>\n      </div>\n    ) : null;\n    const winnerDisplay = winner ? (\n      <div className=\"winner\">\n        <span className=\"winner-name\">{name}-wins!</span>\n        <button onClick={this.resetGame}>Try Again</button>\n        <button onClick={() => window.location.reload()}>Restart Game</button>\n      </div>\n    ) : null;\n    return (\n      <div className=\"game-page\">\n        <div className=\"players\">\n          <div className=\"player\">\n            {active === \"player1\" ? <div className=\"active\"></div> : null}\n            <span>{player1} - X</span>\n          </div>\n          <div className=\"player\">\n            {active === \"player2\" ? <div className=\"active\"></div> : null}\n            <span>{player2} - O</span>\n          </div>\n        </div>\n        <div className=\"play-box\">\n          <table>\n            <tbody>\n              <tr>\n                <td id=\"box1\" onClick={this.handleClick}></td>\n                <td id=\"box2\" onClick={this.handleClick}></td>\n                <td id=\"box3\" onClick={this.handleClick}></td>\n              </tr>\n              <tr>\n                <td id=\"box4\" onClick={this.handleClick}></td>\n                <td id=\"box5\" onClick={this.handleClick}></td>\n                <td id=\"box6\" onClick={this.handleClick}></td>\n              </tr>\n              <tr>\n                <td id=\"box7\" onClick={this.handleClick}></td>\n                <td id=\"box8\" onClick={this.handleClick}></td>\n                <td id=\"box9\" onClick={this.handleClick}></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        {winnerDisplay}\n        {gameoverDisplay}\n      </div>\n    );\n  }\n}\nexport default Gamepage;\n","import React, { useEffect, useRef } from \"react\";\nimport \"./LandingPage.css\";\n\nconst LandingPage = ({ handleChange, handleSubmit }) => {\n  const p1 = useRef(null);\n  const p2 = useRef(null);\n  const button = useRef(null);\n\n  const onKeyDown = (target, e) => {\n    if (e.keyCode === 13 && e.target.value !== \"\") {\n      switch (target) {\n        case \"player1\":\n          p2.current.focus();\n          break;\n        case \"player2\":\n          button.current.focus();\n          break;\n        default:\n          p1.current.focus();\n      }\n    }\n  };\n\n  useEffect(() => {\n    p1.current.focus();\n  }, []);\n\n  return (\n    <div className=\"landing-page\">\n      <div>\n        <input\n          name=\"player1\"\n          type=\"text\"\n          onChange={handleChange}\n          placeholder=\"player1\"\n          autoComplete=\"off\"\n          ref={p1}\n          onKeyDown={onKeyDown.bind(this, \"player1\")}\n        />\n        <input\n          name=\"player2\"\n          type=\"text\"\n          onChange={handleChange}\n          placeholder=\"player2\"\n          autoComplete=\"off\"\n          ref={p2}\n          onKeyDown={onKeyDown.bind(this, \"player2\")}\n        />\n        <button\n          className=\"start\"\n          type=\"submit\"\n          onClick={handleSubmit}\n          ref={button}\n        >\n          Start\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default LandingPage;\n","import React from \"react\";\nimport GamePage from \"./components/GamePage\";\nimport LandingPage from \"./components/LandingPage.js\";\n\nimport \"./App.css\";\n\nclass TicTacToe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: \"landingPage\",\n      player1: \"\",\n      player2: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit() {\n    const { player1, player2 } = this.state;\n    if (player1 !== \"\" && player2 !== \"\") {\n      this.setState({\n        display: \"gamePage\"\n      });\n    }\n  }\n\n  render() {\n    const { display, player1, player2 } = this.state;\n    return (\n      <div className=\"tic-tac-toe\">\n        <h1>Tic Tac Toe</h1>\n        {display === \"landingPage\" ? (\n          <LandingPage\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n          />\n        ) : (\n          <GamePage\n            player1={player1.toUpperCase()}\n            player2={player2.toUpperCase()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default TicTacToe;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport TicTacToe from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\nReactDOM.render(<TicTacToe />, document.getElementById(\"root\"));\n"],"sourceRoot":""}